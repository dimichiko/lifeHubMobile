// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  password  String
  name      String
  timezone  String?   // zona horaria
  theme     String?   // tema de la app (oscuro, claro)
  language  String?   // idioma preferido
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  habits     Habit[]
  habitLogs  HabitLog[]
  sessions   Session[]
}

model Habit {
  id          String    @id @default(cuid())
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  name        String
  frequency   String    // e.g. "daily", "weekly"
  reminderAt  DateTime? // optional daily reminder
  archived    Boolean   @default(false)
  goal        Int?      // meta o valor objetivo
  isRecurring Boolean   @default(false) // si el hábito es recurrente
  daysOfWeek  String[]  @default([]) // días de la semana ["monday", "wednesday", "friday"]
  createdAt   DateTime  @default(now())

  logs        HabitLog[]
}

model HabitLog {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  habit       Habit    @relation(fields: [habitId], references: [id])
  habitId     String
  date        DateTime
  note        String?
  mood        String?  // estado de ánimo
  energyLevel Int?     // nivel de energía

  @@unique([userId, habitId, date]) // solo un log por día por hábito
}

model Session {
  id           String    @id @default(cuid())
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  token        String    @unique
  userAgent    String?  // info del dispositivo
  ip           String?  // dirección IP
  createdAt    DateTime  @default(now())
  expiresAt    DateTime
}
